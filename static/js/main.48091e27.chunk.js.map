{"version":3,"sources":["App.js","index.js"],"names":["App","state","isOpen","isExpandable","toggleMenuSelection","_this","setState","toggleMenu","prevState","_this$state","this","react_default","a","createElement","BrowserRouter","dist","header","logo","title","items","ITEMS","className","onClick","htmlFor","react_switch_default","onChange","checked","id","Route","exact","path","component","Dashboard","AddGroup","AddPerson","NotificationsActive","NotificationsOff","Profile","Application","LogOut","PureComponent","RoutePath","_ref","App_RoutePath","iconClassName","icon","to","isCollapsible","subItems","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.48091e27.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Container, Header, SideMenu } from \"simple-side-menu\";\nimport Switch from \"react-switch\";\n\nimport \"./style.css\";\n\nclass App extends PureComponent {\n  state = {\n    isOpen: true,\n    isExpandable: true\n  };\n\n  toggleMenuSelection = isExpandable => {\n    this.setState({ isExpandable });\n  };\n\n  toggleMenu = () => {\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen\n    }));\n  };\n\n  render() {\n    const { isExpandable, isOpen } = this.state;\n    return (\n      <Router>\n        <Container>\n          <SideMenu\n            isOpen={isOpen}\n            header={\n              <Header\n                logo=\"https://cdn-images-1.medium.com/max/1200/1*YsPpBr_PgtyTR6CFDmKU9g.png\"\n                title=\"Side Menu\"\n              />\n            }\n            items={ITEMS}\n            isExpandable={isExpandable}\n          />\n          <div className=\"main\">\n            <nav className=\"nav-bar\">\n              <div className=\"nav-bar__left\">\n                {!isExpandable && (\n                  <div className=\"btn-menu\" onClick={this.toggleMenu}>\n                    <i className=\"material-icons btn-menu__icon\">menu</i>\n                  </div>\n                )}\n                <h1 className=\"title\">Side Menu</h1>\n              </div>\n              <label className=\"nav-bar__right\" htmlFor=\"normal-switch\">\n                <span className=\"label\">IS EXPANDABLE</span>\n                <Switch\n                  onChange={this.toggleMenuSelection}\n                  checked={isExpandable}\n                  id=\"normal-switch\"\n                />\n              </label>\n            </nav>\n            <Route exact path=\"/simple-side-menu/\" component={Dashboard} />\n            <Route path=\"/simple-side-menu/group/new\" component={AddGroup} />\n            <Route\n              path=\"/simple-side-menu/group/person/new\"\n              component={AddPerson}\n            />\n            <Route\n              path=\"/simple-side-menu/notifications/active\"\n              component={NotificationsActive}\n            />\n            <Route\n              path=\"/simple-side-menu/notifications/off\"\n              component={NotificationsOff}\n            />\n            <Route\n              path=\"/simple-side-menu/settings/profile\"\n              component={Profile}\n            />\n            <Route\n              path=\"/simple-side-menu/settings/apps\"\n              component={Application}\n            />\n            <Route path=\"/simple-side-menu/sign-out\" component={LogOut} />\n          </div>\n        </Container>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n\nconst RoutePath = ({ path }) => <h4 className=\"path\">{path}</h4>;\n\nconst Dashboard = () => <RoutePath path=\"/dashboard\" />;\nconst AddGroup = () => <RoutePath path=\"/group/new\" />;\nconst AddPerson = () => <RoutePath path=\"/group/person/new\" />;\nconst NotificationsActive = () => <RoutePath path=\"/notifications/active\" />;\nconst NotificationsOff = () => <RoutePath path=\"/notifications/off\" />;\nconst Profile = () => <RoutePath path=\"/settings/profile\" />;\nconst Application = () => <RoutePath path=\"/settings/apps\" />;\nconst LogOut = () => <RoutePath path=\"/sign-out\" />;\n\nconst ITEMS = [\n  {\n    title: \"Dashboard\",\n    iconClassName: \"fa fa-dashboard\",\n    icon: \"\",\n    to: \"/simple-side-menu\"\n  },\n  {\n    title: \"Group\",\n    isCollapsible: true,\n    icon: \"group\",\n    subItems: [\n      {\n        title: \"New group\",\n        icon: \"group_add\",\n        to: \"/simple-side-menu/group/new\"\n      },\n      {\n        title: \"New person\",\n        icon: \"person_add\",\n        to: \"/simple-side-menu/group/person/new\"\n      }\n    ]\n  },\n  {\n    title: \"Notifications\",\n    icon: \"notifications\",\n\n    subItems: [\n      {\n        title: \"Active\",\n        icon: \"notifications_active\",\n        to: \"/simple-side-menu/notifications/active\"\n      },\n      {\n        title: \"Off\",\n        icon: \"notifications_off\",\n        to: \"/simple-side-menu/notifications/off\"\n      }\n    ]\n  },\n  {\n    title: \"Settings\",\n    isCollapsible: true,\n    iconClassName: \"ion-gear-b\",\n    subItems: [\n      {\n        title: \"Profile\",\n        icon: \"person\",\n        to: \"/simple-side-menu/settings/profile\"\n      },\n      {\n        title: \"Applications\",\n        icon: <i className=\"material-icons\">apps</i>,\n        to: \"/simple-side-menu/settings/apps\"\n      }\n    ]\n  },\n  {\n    title: \"Sign out\",\n    icon: <i className=\"ion-log-out\" />,\n    to: \"/simple-side-menu/sign-out\"\n  }\n];\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}